1. Http 1.1 schema

2. round trips
    1 TCP
    2 SSL
    x http

2. Keep alive
    - head of line blocking!
    - misconfigured content-length. messes up all further reads
    - terrible protocol. over/under send issue. Have to close connection and re-establish
        - at worst, we could potentially cause memory overflow
        - It wil throw on a perfectly fine connection, not the misbehaving one
    - quick search. security vulnerability.
        - disable pipelining
        - I can send more bytes (my malicious request), and under specify the content-length
        - it is fundamentally flawed
        - http request smuggling

    - Jmeter sends this header. How can we stop it?
        - every second request fails
        - Send connection: close
3. pipelining has huge benefits
    - when not cpu blocked on requests using simple HelloHandler
4. pipelining and head of line blocking


Sys calls
1. Create FD socket - https://dev.to/hgsgtk/how-go-handles-network-and-system-calls-when-tcp-server-1nbd
    - listenStream
    - sysCall("bind", fd, local socket address)
        - socket is just a socket. Needs to be bound to an underlying resource
        - OS sees packets coming into a port with an ip address. It needs to route to the bound sockets
    - sysCall("listen", fd). set socket as passive. accepting incoming connections. backlog of connections
        - get it to listen for the SYN packet
        - UDP wouldn't call listen. instead directly read write from the socket
    - FD is process scoped map of an identifier to an system IO resource

2. new_connection_fd = sysCall("accept", fd)
    - read from the fd
